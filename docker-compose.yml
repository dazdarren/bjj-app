version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: jiujitsu-postgres
    environment:
      POSTGRES_DB: jiujitsu_saas
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: jiujitsu-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile
    container_name: jiujitsu-backend
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/jiujitsu_saas
      - REDIS_URL=redis://redis:6379
      - API_PORT=4000
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./apps/backend:/app
      - /app/node_modules
    command: pnpm dev

  frontend:
    build:
      context: ./apps/frontend
      dockerfile: Dockerfile
    container_name: jiujitsu-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - FRONTEND_PORT=3000
    depends_on:
      - backend
    volumes:
      - ./apps/frontend:/app
      - /app/node_modules
    command: pnpm dev

volumes:
  postgres_data:
  redis_data: